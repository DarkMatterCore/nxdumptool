{
    "filename": {
        "label": "Filename",
        "description": "Filename used for the output dump.\n\nIllegal filesystem characters will be automatically replaced with underscores (\"_\"). If the inserted SD card is used as the output storage, only ASCII characters will be kept â€” this is a limitation of Nintendo's FS driver.\n\nThe file extension cannot be modified, and it is excluded on purpose."
    },

    "output_storage": {
        "label": "Output storage",
        "description": "Storage where the dumped data will be written to. Changing it will automatically update the output filename to better suit the output filesystem limitations.\n\nUsing a connected USB host requires a libusb-based driver, as well as the Python host script. For more information, please visit \"{0}\".",
        "value_00": "SD card ({0} free / {1} total)",
        "value_01": "USB host (PC)",
        "value_02": "{0} ({1} free / {2} total)"
    },

    "gamecard": {
        "image": {
            "prepend_key_area": {
                "label": "Prepend KeyArea data",
                "description": "Prepends the full, 4 KiB long KeyArea block to the output XCI dump, which includes the InitialData area. XCI dumps with KeyArea data are also known as \"Full XCIs\". Disabled by default."
            },

            "keep_certificate": {
                "label": "Keep certificate",
                "description": "Preserves the gamecard certificate in the output XCI dump, which is used to unequivocally identify each individual gamecard. Disabled by default."
            },

            "trim_dump": {
                "label": "Trim dump",
                "description": "Trims the output XCI dump by removing padding data beyond the end of the last HFS partition. Disabled by default."
            },

            "calculate_checksum": {
                "label": "Calculate checksum",
                "description": "Calculates one or more CRC32 checksums over the dumped data, depending on the selected configuration. Checksums are useful to verify data integrity. Enabled by default."
            },

            "lookup_checksum": {
                "label": "Lookup calculated checksum",
                "description": "If \"{0}\" is enabled, this option controls whether the calculated CRC32 checksum should be looked up and validated at the end of the dump process, using an Internet connection and a public HTTP endpoint provided by {1}."
            }
        }
    },

    "start_dump": "Start dump",

    "notifications": {
        "usb_host_unavailable": "Please connect the console to a PC and start the host server program.",
        "get_output_path_error": "Failed to generate output path."
    }
}
